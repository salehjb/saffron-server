generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum RoleType {
  USER
  ADMIN
}

type OtpType {
  code      Int
  expiresIn DateTime
}

model User {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  fullName    String
  phoneNumber String    @unique
  role        RoleType  @default(USER)
  otp         OtpType
  cart        Cart?
  orders      Order[]
  addresses   Address[]
  createdAt   DateTime  @default(now())
}

model Address {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  user        User    @relation(fields: [userId], references: [id])
  userId      String  @db.ObjectId
  province    String
  city        String
  address     String
  phoneNumber String
  houseNumber Int
  floor       Int
  unit        Int
  postalCode  Int
  orders      Order[]
}

model Cart {
  id     String     @id @default(auto()) @map("_id") @db.ObjectId
  user   User       @relation(fields: [userId], references: [id])
  userId String     @unique @db.ObjectId
  items  CartItem[]
}

model CartItem {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  cartId    String  @db.ObjectId
  cart      Cart    @relation(fields: [cartId], references: [id])
  productId String  @db.ObjectId
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
}

model Category {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String    @unique
  products Product[]
}

model Product {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  name        String      @unique
  description String      @default("")
  price       Int
  image       String
  isActive    Boolean     @default(true)
  category    Category    @relation(fields: [categoryId], references: [id])
  categoryId  String      @db.ObjectId
  cartItems   CartItem[]
  orderItems  OrderItem[]
  createdAt   DateTime    @default(now())
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELED
}

model Order {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  user       User        @relation(fields: [userId], references: [id])
  userId     String      @db.ObjectId
  orderItems OrderItem[]
  address    Address     @relation(fields: [addressId], references: [id])
  addressId  String      @db.ObjectId
  totalPrice Int
  status     OrderStatus
  createdAt  DateTime    @default(now())
}

model OrderItem {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   String  @db.ObjectId
  product   Product @relation(fields: [productId], references: [id])
  productId String  @db.ObjectId
  quantity  Int
  price     Int

  @@unique([orderId, productId])
}
